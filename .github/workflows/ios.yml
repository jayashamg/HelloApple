name: iOSProject

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: IOS Build, TEST, Nexus upload, Appcenter upload, Fortify upload 
    runs-on: macos-AWS-IOS

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Default Scheme
      - branch: Feature/TEST

      -name: Parameters
      Type: Bollen
      Scheme
      DEV
      UAT
      PROD
      -name: RelaseType
      Type: Bollen
      RC Relase
      Prod
      Major
      Minor
      -Name: Jira Ticket 
      String
      -Name: Varables
      ENV: IOS
      AppcenterURL: http://Appcenter.com/IOS
      FortiftURL: http://
      ProxyURL:
      FVersion=
      Version=
      ID=
      AppID=
      zippath=

      - name: Dependency 
        run: |
        gem -v
        gem install 3.0.0 
        ruby -v 
        xcpretty
        ruby install 3.0
        fastlane Version/Install
        cocoapods Version/Install
        xcode -select switch /App;cation/Xcode13

          - name: Pods
        run: |
        Pod install

          - name: IOS Build
        run: |
        xcodebuild -workspace -Scheme 

        -name: IOS Testing 
        run: |
        xcodebuild test 
        fastlane test 

        -name: Archive and Create IPA
        xcodebuild -exportArchive -Archivepath 

        -name: Appcneter Upload 
        run: |
        Fastalane uplaod 
        Curl APPcenter

        -name: ZiP Forttify/Nexus Upload 
        run: |
        cp 

        -

        
      
      
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: IOSBuild
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild -Scheme 
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
